name: Auto Release

on:
  push:
    branches:
      - stable
        
permissions:
  contents: write  # âœ… Allows pushing tags & creating releases
  
env:
  SUFFIX: "b"  # In future commits, we can customize the suffix (e.g., "-beta", "b", "-rc1")

jobs:
  create_tag_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure we get the full history for changelog generation

      - name: Extract version from build.gradle.kts
        id: extract_version
        run: |
          VERSION_NAME=$(grep -oP 'versionName\s*=\s*"\K[^"]+' app/build.gradle.kts || grep -oP 'versionName\s+"[^"]+"' app/build.gradle | cut -d'"' -f2)
          FINAL_VERSION="v${VERSION_NAME}${{ env.SUFFIX }}"
          echo "Extracted version: $FINAL_VERSION"
          echo "FINAL_VERSION=$FINAL_VERSION" >> $GITHUB_ENV

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ env.FINAL_VERSION }}$"; then
            echo "Tag ${{ env.FINAL_VERSION }} already exists. Skipping tagging."
            exit 1
          fi
      
      - name: Generate changelog from commits
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            LAST_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "Generating changelog since $LAST_TAG"

          echo "## Changelog" > changelog.md
          git log --pretty=format:"- %s" $LAST_TAG..HEAD >> changelog.md

          # Store changelog as a file, to avoid multi-line env issues
          echo "CHANGELOG_FILE=changelog.md" >> $GITHUB_ENV

      - name: Authenticate Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create new Tag
        run: |
          git tag "${{ env.FINAL_VERSION }}"
          git push origin "${{ env.FINAL_VERSION }}"

      - name: Decode and Restore Keystore
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks
        
      - name: Build Release APK
        run: ./gradlew assembleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/*.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: "${{ env.FINAL_VERSION }}"
          name: "Release ${{ env.FINAL_VERSION }}"
          body_path: "${{ env.CHANGELOG_FILE }}"
          draft: false
          prerelease: false
          files: |
            app/build/outputs/apk/release/*.apk